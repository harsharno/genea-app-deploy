name: Deploy Microservice to ECS Fargate

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-west-2
  AWS_DEFAULT_REGION: us-west-2
  ECR_REPOSITORY: microservice
  ECS_CLUSTER: genea-work-cluster
  ECS_SERVICE: microservice
  CONTAINER_NAME: microservice

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 806819308050.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build & Push Docker image
        run: |
          IMAGE_URI=806819308050.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Prepare new task definition
        run: |
          IMAGE_URI=806819308050.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
          jq --arg IMAGE "$IMAGE_URI" '
            .containerDefinitions[0].image = $IMAGE
            | .containerDefinitions[0].memory = 512
            | .containerDefinitions[0].cpu = 256
            | { 
                family,
                taskRoleArn,
                executionRoleArn,
                networkMode,
                containerDefinitions,
                volumes,
                placementConstraints,
                requiresCompatibilities,
                cpu,
                memory
              }
          ' task-def.json > new-task-def.json

      - name: Register new ECS task definition
        run: |
          REVISION=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query "taskDefinition.revision" \
            --output text)
          echo "REVISION=$REVISION" >> $GITHUB_ENV

      - name: Update ECS service
        run: |
          FAMILY=$(jq -r '.family' new-task-def.json)
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --task-definition $FAMILY:$REVISION
